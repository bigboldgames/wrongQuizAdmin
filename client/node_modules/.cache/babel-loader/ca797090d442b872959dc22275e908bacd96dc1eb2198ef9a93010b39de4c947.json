{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91737\\\\OneDrive\\\\Documents\\\\gokulGames\\\\wrongquiz\\\\admin\\\\client\\\\src\\\\components\\\\QuestionManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Plus, Trash2, Edit, Save, X, HelpCircle, Image, Type, ChevronRight, Minus } from 'lucide-react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionManagement = () => {\n  _s();\n  var _questionContent$sele, _questionContent$sele2, _questionContent$sele3;\n  const [quizzes, setQuizzes] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [deletingId, setDeletingId] = useState(null);\n  const [questionContent, setQuestionContent] = useState({});\n  const [optionsContent, setOptionsContent] = useState([{\n    content: {}\n  }, {\n    content: {}\n  }, {\n    content: {}\n  }, {\n    content: {}\n  }]);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    setValue,\n    watch\n  } = useForm();\n  const watchedQuestionType = watch('question_type');\n  useEffect(() => {\n    fetchInitialData();\n  }, []);\n  useEffect(() => {\n    if (selectedQuiz) {\n      fetchQuestions();\n    }\n  }, [selectedQuiz]);\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n      const [quizzesResponse, languagesResponse] = await Promise.all([axios.get('/api/quizzes'), axios.get('/api/languages/active')]);\n      setQuizzes(quizzesResponse.data);\n      setLanguages(languagesResponse.data);\n      if (quizzesResponse.data.length > 0) {\n        setSelectedQuiz(quizzesResponse.data[0].id.toString());\n      }\n      if (languagesResponse.data.length > 0) {\n        setSelectedLanguage(languagesResponse.data[0].code);\n      }\n    } catch (error) {\n      console.error('Failed to fetch initial data:', error);\n      toast.error('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get(`/api/quizzes/${selectedQuiz}`);\n      setQuestions(response.data.questions || []);\n    } catch (error) {\n      console.error('Failed to fetch questions:', error);\n      toast.error('Failed to load questions');\n    }\n  };\n  const onSubmit = async data => {\n    try {\n      // Prepare content array from current state\n      const content = Object.entries(questionContent).map(([langCode, content]) => ({\n        language_code: langCode,\n        question_text: content.question_text || '',\n        media_url: content.media_url || null,\n        explanation: content.explanation || null\n      }));\n\n      // Prepare options array from current state\n      const options = optionsContent.map((option, index) => ({\n        order_index: index + 1,\n        is_correct: option.is_correct || false,\n        content: Object.entries(option.content).map(([langCode, optContent]) => ({\n          language_code: langCode,\n          option_text: optContent.option_text || '',\n          media_url: optContent.media_url || null\n        }))\n      }));\n      const questionData = {\n        quiz_id: parseInt(selectedQuiz),\n        question_type: data.question_type,\n        order_index: questions.length + 1,\n        content,\n        options\n      };\n      if (editingId) {\n        await axios.put(`/api/questions/${editingId}`, questionData);\n        toast.success('Question updated successfully');\n        setEditingId(null);\n      } else {\n        await axios.post('/api/questions', questionData);\n        toast.success('Question created successfully');\n      }\n      setShowAddForm(false);\n      reset();\n      setQuestionContent({});\n      setOptionsContent([{\n        content: {}\n      }, {\n        content: {}\n      }, {\n        content: {}\n      }, {\n        content: {}\n      }]);\n      fetchQuestions();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to save question';\n      toast.error(message);\n    }\n  };\n  const handleEdit = question => {\n    setEditingId(question.id);\n    setValue('question_type', question.question_type);\n\n    // Set question content\n    languages.forEach(lang => {\n      const content = question.content[lang.code];\n      if (content) {\n        setValue(`question_text_${lang.code}`, content.question_text);\n        setValue(`media_url_${lang.code}`, content.media_url);\n        setValue(`explanation_${lang.code}`, content.explanation);\n      }\n    });\n\n    // Set options\n    question.options.forEach((option, index) => {\n      setValue(`is_correct_${index}`, option.is_correct);\n      languages.forEach(lang => {\n        const optionContent = option.content[lang.code];\n        if (optionContent) {\n          setValue(`option_text_${index}_${lang.code}`, optionContent.option_text);\n          setValue(`option_media_url_${index}_${lang.code}`, optionContent.media_url);\n        }\n      });\n    });\n    setShowAddForm(true);\n  };\n  const handleDelete = async questionId => {\n    if (!window.confirm('Are you sure you want to delete this question?')) {\n      return;\n    }\n    try {\n      setDeletingId(questionId);\n      await axios.delete(`/api/questions/${questionId}`);\n      toast.success('Question deleted successfully');\n      fetchQuestions();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to delete question';\n      toast.error(message);\n    } finally {\n      setDeletingId(null);\n    }\n  };\n  const handleCancel = () => {\n    setShowAddForm(false);\n    setEditingId(null);\n    reset();\n    setQuestionContent({});\n    setOptionsContent([{\n      content: {}\n    }, {\n      content: {}\n    }, {\n      content: {}\n    }, {\n      content: {}\n    }]);\n  };\n\n  // Helper functions for managing content\n  const updateQuestionContent = (field, value) => {\n    setQuestionContent(prev => ({\n      ...prev,\n      [selectedLanguage]: {\n        ...prev[selectedLanguage],\n        [field]: value\n      }\n    }));\n  };\n  const updateOptionContent = (optionIndex, field, value) => {\n    setOptionsContent(prev => {\n      const newOptions = [...prev];\n      newOptions[optionIndex] = {\n        ...newOptions[optionIndex],\n        content: {\n          ...newOptions[optionIndex].content,\n          [selectedLanguage]: {\n            ...newOptions[optionIndex].content[selectedLanguage],\n            [field]: value\n          }\n        }\n      };\n      return newOptions;\n    });\n  };\n  const updateOptionCorrect = (optionIndex, isCorrect) => {\n    setOptionsContent(prev => {\n      const newOptions = [...prev];\n      newOptions[optionIndex] = {\n        ...newOptions[optionIndex],\n        is_correct: isCorrect\n      };\n      return newOptions;\n    });\n  };\n  const handleImageUpload = (type, optionIndex = null) => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    input.onchange = e => {\n      const file = e.target.files[0];\n      if (file) {\n        // For now, we'll just show the file name\n        // In a real app, you'd upload to a server and get a URL\n        const fileName = file.name;\n        if (type === 'question') {\n          updateQuestionContent('media_url', fileName);\n        } else if (type === 'option' && optionIndex !== null) {\n          updateOptionContent(optionIndex, 'media_url', fileName);\n        }\n        toast.success('Image selected: ' + fileName);\n      }\n    };\n    input.click();\n  };\n  const getLanguageName = code => {\n    const language = languages.find(lang => lang.code === code);\n    return language ? language.native_name : code;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(HelpCircle, {\n          className: \"w-8 h-8 text-indigo-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-900\",\n          children: \"Question Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddForm(!showAddForm),\n        className: \"btn btn-primary\",\n        disabled: !selectedQuiz,\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), \"Add Question\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Select Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedQuiz,\n          onChange: e => setSelectedQuiz(e.target.value),\n          className: \"form-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), quizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: quiz.id,\n            children: quiz.title\n          }, quiz.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), showAddForm && selectedQuiz && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: editingId ? 'Edit Question' : 'Add New Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Question Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"text\",\n                className: \"form-radio\",\n                ...register('question_type', {\n                  required: 'Question type is required'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Type, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this), \"Text Only\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"media\",\n                className: \"form-radio\",\n                ...register('question_type', {\n                  required: 'Question type is required'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), \"Text + Media\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), errors.question_type && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: errors.question_type.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Select Language to Add Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLanguage,\n            onChange: e => setSelectedLanguage(e.target.value),\n            className: \"form-input\",\n            children: languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: language.code,\n              children: [language.native_name, \" (\", language.name, \")\"]\n            }, language.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded-lg p-4 mb-4 bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-lg mb-3 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-3 h-3 bg-indigo-500 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), getLanguageName(selectedLanguage), \" Content\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Question Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 3,\n              className: \"form-input\",\n              placeholder: `Enter question in ${getLanguageName(selectedLanguage)}`,\n              value: ((_questionContent$sele = questionContent[selectedLanguage]) === null || _questionContent$sele === void 0 ? void 0 : _questionContent$sele.question_text) || '',\n              onChange: e => updateQuestionContent('question_text', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), watchedQuestionType === 'media' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Question Media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"url\",\n                className: \"form-input flex-1\",\n                placeholder: \"Enter image or video URL\",\n                value: ((_questionContent$sele2 = questionContent[selectedLanguage]) === null || _questionContent$sele2 === void 0 ? void 0 : _questionContent$sele2.media_url) || '',\n                onChange: e => updateQuestionContent('media_url', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleImageUpload('question'),\n                className: \"btn btn-outline\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 23\n                }, this), \"Upload Image\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Explanation (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 2,\n              className: \"form-input\",\n              placeholder: `Enter explanation in ${getLanguageName(selectedLanguage)}`,\n              value: ((_questionContent$sele3 = questionContent[selectedLanguage]) === null || _questionContent$sele3 === void 0 ? void 0 : _questionContent$sele3.explanation) || '',\n              onChange: e => updateQuestionContent('explanation', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"font-medium mb-3\",\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), [0, 1, 2, 3].map(optionIndex => {\n              var _optionsContent$optio, _optionsContent$optio2, _optionsContent$optio3, _optionsContent$optio4, _optionsContent$optio5, _optionsContent$optio6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded-lg p-3 mb-3 bg-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-3 mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"correct_option\",\n                    className: \"form-radio\",\n                    checked: ((_optionsContent$optio = optionsContent[optionIndex]) === null || _optionsContent$optio === void 0 ? void 0 : _optionsContent$optio.is_correct) || false,\n                    onChange: () => {\n                      // Uncheck all other options\n                      setOptionsContent(prev => prev.map((opt, idx) => ({\n                        ...opt,\n                        is_correct: idx === optionIndex\n                      })));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: [\"Option \", optionIndex + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this), ((_optionsContent$optio2 = optionsContent[optionIndex]) === null || _optionsContent$optio2 === void 0 ? void 0 : _optionsContent$optio2.is_correct) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-green-600 text-sm font-medium\",\n                    children: \"(Correct Answer)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Option Text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-input\",\n                    placeholder: `Option ${optionIndex + 1} in ${getLanguageName(selectedLanguage)}`,\n                    value: ((_optionsContent$optio3 = optionsContent[optionIndex]) === null || _optionsContent$optio3 === void 0 ? void 0 : (_optionsContent$optio4 = _optionsContent$optio3.content[selectedLanguage]) === null || _optionsContent$optio4 === void 0 ? void 0 : _optionsContent$optio4.option_text) || '',\n                    onChange: e => updateOptionContent(optionIndex, 'option_text', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this), watchedQuestionType === 'media' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-label\",\n                    children: \"Option Media\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"url\",\n                      className: \"form-input flex-1\",\n                      placeholder: \"Enter image URL\",\n                      value: ((_optionsContent$optio5 = optionsContent[optionIndex]) === null || _optionsContent$optio5 === void 0 ? void 0 : (_optionsContent$optio6 = _optionsContent$optio5.content[selectedLanguage]) === null || _optionsContent$optio6 === void 0 ? void 0 : _optionsContent$optio6.media_url) || '',\n                      onChange: e => updateOptionContent(optionIndex, 'media_url', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => handleImageUpload('option', optionIndex),\n                      className: \"btn btn-outline\",\n                      children: [/*#__PURE__*/_jsxDEV(Image, {\n                        className: \"w-4 h-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 29\n                      }, this), \"Upload\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-medium mb-2\",\n            children: \"Content Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-3 gap-2\",\n            children: languages.map(language => {\n              var _questionContent$lang;\n              const hasContent = (_questionContent$lang = questionContent[language.code]) === null || _questionContent$lang === void 0 ? void 0 : _questionContent$lang.question_text;\n              const hasOptions = optionsContent.some(opt => {\n                var _opt$content$language;\n                return (_opt$content$language = opt.content[language.code]) === null || _opt$content$language === void 0 ? void 0 : _opt$content$language.option_text;\n              });\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-2 rounded text-sm ${hasContent && hasOptions ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'}`,\n                children: [language.native_name, hasContent && hasOptions && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-1\",\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 52\n                }, this)]\n              }, language.code, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: [/*#__PURE__*/_jsxDEV(Save, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), editingId ? 'Update Question' : 'Create Question']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancel,\n            className: \"btn btn-outline\",\n            children: [/*#__PURE__*/_jsxDEV(X, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this), \"Cancel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), selectedQuiz && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: [\"Questions (\", questions.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4 p-4\",\n        children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded-lg p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-indigo-100 text-indigo-800 px-2 py-1 rounded text-sm font-medium\",\n                children: [\"Q\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${question.question_type === 'text' ? 'user' : 'admin'}`,\n                children: question.question_type === 'text' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Type, {\n                    className: \"w-3 h-3 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 27\n                  }, this), \"Text\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Image, {\n                    className: \"w-3 h-3 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 27\n                  }, this), \"Media\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(question),\n                className: \"btn btn-outline btn-sm\",\n                title: \"Edit question\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(question.id),\n                disabled: deletingId === question.id,\n                className: \"btn btn-danger btn-sm\",\n                title: \"Delete question\",\n                children: deletingId === question.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: Object.entries(question.content).map(([langCode, content]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-600\",\n                children: [getLanguageName(langCode), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: content.question_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 23\n              }, this)]\n            }, langCode, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-gray-600 mb-2\",\n              children: \"Options:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-2\",\n              children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-2 rounded text-sm ${option.is_correct ? 'bg-green-50 border border-green-200' : 'bg-gray-50'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `w-2 h-2 rounded-full ${option.is_correct ? 'bg-green-500' : 'bg-gray-300'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: [\"Option \", optIndex + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 27\n                  }, this), option.is_correct && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-green-600 text-xs\",\n                    children: \"(Correct)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 25\n                }, this), Object.entries(option.content).map(([langCode, optContent]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-600 ml-4\",\n                  children: [getLanguageName(langCode), \": \", optContent.option_text]\n                }, langCode, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 27\n                }, this))]\n              }, option.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 17\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 15\n        }, this)), questions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8 text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(HelpCircle, {\n            className: \"w-12 h-12 mx-auto mb-4 opacity-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions found. Add your first question to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionManagement, \"nP5YseAB3rKPD1UPjpqr2RtHKsM=\", false, function () {\n  return [useForm];\n});\n_c = QuestionManagement;\nexport default QuestionManagement;\nvar _c;\n$RefreshReg$(_c, \"QuestionManagement\");","map":{"version":3,"names":["React","useState","useEffect","useForm","Plus","Trash2","Edit","Save","X","HelpCircle","Image","Type","ChevronRight","Minus","axios","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionManagement","_s","_questionContent$sele","_questionContent$sele2","_questionContent$sele3","quizzes","setQuizzes","languages","setLanguages","questions","setQuestions","selectedQuiz","setSelectedQuiz","selectedLanguage","setSelectedLanguage","loading","setLoading","showAddForm","setShowAddForm","editingId","setEditingId","deletingId","setDeletingId","questionContent","setQuestionContent","optionsContent","setOptionsContent","content","selectedQuestion","setSelectedQuestion","register","handleSubmit","formState","errors","reset","setValue","watch","watchedQuestionType","fetchInitialData","fetchQuestions","quizzesResponse","languagesResponse","Promise","all","get","data","length","id","toString","code","error","console","response","onSubmit","Object","entries","map","langCode","language_code","question_text","media_url","explanation","options","option","index","order_index","is_correct","optContent","option_text","questionData","quiz_id","parseInt","question_type","put","success","post","_error$response","_error$response$data","message","handleEdit","question","forEach","lang","optionContent","handleDelete","questionId","window","confirm","delete","_error$response2","_error$response2$data","handleCancel","updateQuestionContent","field","value","prev","updateOptionContent","optionIndex","newOptions","updateOptionCorrect","isCorrect","handleImageUpload","type","input","document","createElement","accept","onchange","e","file","target","files","fileName","name","click","getLanguageName","language","find","native_name","className","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","quiz","title","required","rows","placeholder","_optionsContent$optio","_optionsContent$optio2","_optionsContent$optio3","_optionsContent$optio4","_optionsContent$optio5","_optionsContent$optio6","checked","opt","idx","_questionContent$lang","hasContent","hasOptions","some","_opt$content$language","optIndex","_c","$RefreshReg$"],"sources":["C:/Users/91737/OneDrive/Documents/gokulGames/wrongquiz/admin/client/src/components/QuestionManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Plus, Trash2, Edit, Save, X, HelpCircle, Image, Type, ChevronRight, Minus } from 'lucide-react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst QuestionManagement = () => {\r\n  const [quizzes, setQuizzes] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQuiz, setSelectedQuiz] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [deletingId, setDeletingId] = useState(null);\r\n  const [questionContent, setQuestionContent] = useState({});\r\n  const [optionsContent, setOptionsContent] = useState([{ content: {} }, { content: {} }, { content: {} }, { content: {} }]);\r\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    setValue,\r\n    watch\r\n  } = useForm();\r\n\r\n  const watchedQuestionType = watch('question_type');\r\n\r\n  useEffect(() => {\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedQuiz) {\r\n      fetchQuestions();\r\n    }\r\n  }, [selectedQuiz]);\r\n\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const [quizzesResponse, languagesResponse] = await Promise.all([\r\n        axios.get('/api/quizzes'),\r\n        axios.get('/api/languages/active')\r\n      ]);\r\n      setQuizzes(quizzesResponse.data);\r\n      setLanguages(languagesResponse.data);\r\n      \r\n      if (quizzesResponse.data.length > 0) {\r\n        setSelectedQuiz(quizzesResponse.data[0].id.toString());\r\n      }\r\n      if (languagesResponse.data.length > 0) {\r\n        setSelectedLanguage(languagesResponse.data[0].code);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch initial data:', error);\r\n      toast.error('Failed to load data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/quizzes/${selectedQuiz}`);\r\n      setQuestions(response.data.questions || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch questions:', error);\r\n      toast.error('Failed to load questions');\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      // Prepare content array from current state\r\n      const content = Object.entries(questionContent).map(([langCode, content]) => ({\r\n        language_code: langCode,\r\n        question_text: content.question_text || '',\r\n        media_url: content.media_url || null,\r\n        explanation: content.explanation || null\r\n      }));\r\n\r\n      // Prepare options array from current state\r\n      const options = optionsContent.map((option, index) => ({\r\n        order_index: index + 1,\r\n        is_correct: option.is_correct || false,\r\n        content: Object.entries(option.content).map(([langCode, optContent]) => ({\r\n          language_code: langCode,\r\n          option_text: optContent.option_text || '',\r\n          media_url: optContent.media_url || null\r\n        }))\r\n      }));\r\n\r\n      const questionData = {\r\n        quiz_id: parseInt(selectedQuiz),\r\n        question_type: data.question_type,\r\n        order_index: questions.length + 1,\r\n        content,\r\n        options\r\n      };\r\n\r\n      if (editingId) {\r\n        await axios.put(`/api/questions/${editingId}`, questionData);\r\n        toast.success('Question updated successfully');\r\n        setEditingId(null);\r\n      } else {\r\n        await axios.post('/api/questions', questionData);\r\n        toast.success('Question created successfully');\r\n      }\r\n      \r\n      setShowAddForm(false);\r\n      reset();\r\n      setQuestionContent({});\r\n      setOptionsContent([{ content: {} }, { content: {} }, { content: {} }, { content: {} }]);\r\n      fetchQuestions();\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to save question';\r\n      toast.error(message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (question) => {\r\n    setEditingId(question.id);\r\n    setValue('question_type', question.question_type);\r\n    \r\n    // Set question content\r\n    languages.forEach(lang => {\r\n      const content = question.content[lang.code];\r\n      if (content) {\r\n        setValue(`question_text_${lang.code}`, content.question_text);\r\n        setValue(`media_url_${lang.code}`, content.media_url);\r\n        setValue(`explanation_${lang.code}`, content.explanation);\r\n      }\r\n    });\r\n\r\n    // Set options\r\n    question.options.forEach((option, index) => {\r\n      setValue(`is_correct_${index}`, option.is_correct);\r\n      languages.forEach(lang => {\r\n        const optionContent = option.content[lang.code];\r\n        if (optionContent) {\r\n          setValue(`option_text_${index}_${lang.code}`, optionContent.option_text);\r\n          setValue(`option_media_url_${index}_${lang.code}`, optionContent.media_url);\r\n        }\r\n      });\r\n    });\r\n\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const handleDelete = async (questionId) => {\r\n    if (!window.confirm('Are you sure you want to delete this question?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setDeletingId(questionId);\r\n      await axios.delete(`/api/questions/${questionId}`);\r\n      toast.success('Question deleted successfully');\r\n      fetchQuestions();\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to delete question';\r\n      toast.error(message);\r\n    } finally {\r\n      setDeletingId(null);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowAddForm(false);\r\n    setEditingId(null);\r\n    reset();\r\n    setQuestionContent({});\r\n    setOptionsContent([{ content: {} }, { content: {} }, { content: {} }, { content: {} }]);\r\n  };\r\n\r\n  // Helper functions for managing content\r\n  const updateQuestionContent = (field, value) => {\r\n    setQuestionContent(prev => ({\r\n      ...prev,\r\n      [selectedLanguage]: {\r\n        ...prev[selectedLanguage],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const updateOptionContent = (optionIndex, field, value) => {\r\n    setOptionsContent(prev => {\r\n      const newOptions = [...prev];\r\n      newOptions[optionIndex] = {\r\n        ...newOptions[optionIndex],\r\n        content: {\r\n          ...newOptions[optionIndex].content,\r\n          [selectedLanguage]: {\r\n            ...newOptions[optionIndex].content[selectedLanguage],\r\n            [field]: value\r\n          }\r\n        }\r\n      };\r\n      return newOptions;\r\n    });\r\n  };\r\n\r\n  const updateOptionCorrect = (optionIndex, isCorrect) => {\r\n    setOptionsContent(prev => {\r\n      const newOptions = [...prev];\r\n      newOptions[optionIndex] = {\r\n        ...newOptions[optionIndex],\r\n        is_correct: isCorrect\r\n      };\r\n      return newOptions;\r\n    });\r\n  };\r\n\r\n  const handleImageUpload = (type, optionIndex = null) => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = 'image/*';\r\n    input.onchange = (e) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        // For now, we'll just show the file name\r\n        // In a real app, you'd upload to a server and get a URL\r\n        const fileName = file.name;\r\n        if (type === 'question') {\r\n          updateQuestionContent('media_url', fileName);\r\n        } else if (type === 'option' && optionIndex !== null) {\r\n          updateOptionContent(optionIndex, 'media_url', fileName);\r\n        }\r\n        toast.success('Image selected: ' + fileName);\r\n      }\r\n    };\r\n    input.click();\r\n  };\r\n\r\n  const getLanguageName = (code) => {\r\n    const language = languages.find(lang => lang.code === code);\r\n    return language ? language.native_name : code;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <HelpCircle className=\"w-8 h-8 text-indigo-600\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Question Management</h2>\r\n        </div>\r\n        <button\r\n          onClick={() => setShowAddForm(!showAddForm)}\r\n          className=\"btn btn-primary\"\r\n          disabled={!selectedQuiz}\r\n        >\r\n          <Plus className=\"w-4 h-4\" />\r\n          Add Question\r\n        </button>\r\n      </div>\r\n\r\n      {/* Quiz Selection */}\r\n      <div className=\"card mb-6\">\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">Select Quiz</h3>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Quiz</label>\r\n          <select\r\n            value={selectedQuiz}\r\n            onChange={(e) => setSelectedQuiz(e.target.value)}\r\n            className=\"form-input\"\r\n          >\r\n            <option value=\"\">Select a quiz</option>\r\n            {quizzes.map((quiz) => (\r\n              <option key={quiz.id} value={quiz.id}>\r\n                {quiz.title}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add/Edit Question Form */}\r\n      {showAddForm && selectedQuiz && (\r\n        <div className=\"card mb-6\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">\r\n              {editingId ? 'Edit Question' : 'Add New Question'}\r\n            </h3>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Question Type */}\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Question Type</label>\r\n              <div className=\"flex gap-4\">\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"text\"\r\n                    className=\"form-radio\"\r\n                    {...register('question_type', { required: 'Question type is required' })}\r\n                  />\r\n                  <span className=\"ml-2 flex items-center\">\r\n                    <Type className=\"w-4 h-4 mr-1\" />\r\n                    Text Only\r\n                  </span>\r\n                </label>\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"media\"\r\n                    className=\"form-radio\"\r\n                    {...register('question_type', { required: 'Question type is required' })}\r\n                  />\r\n                  <span className=\"ml-2 flex items-center\">\r\n                    <Image className=\"w-4 h-4 mr-1\" />\r\n                    Text + Media\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              {errors.question_type && (\r\n                <p className=\"error-message\">{errors.question_type.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Language Selection */}\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Select Language to Add Content</label>\r\n              <select\r\n                value={selectedLanguage}\r\n                onChange={(e) => setSelectedLanguage(e.target.value)}\r\n                className=\"form-input\"\r\n              >\r\n                {languages.map((language) => (\r\n                  <option key={language.code} value={language.code}>\r\n                    {language.native_name} ({language.name})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Current Language Content */}\r\n            <div className=\"border rounded-lg p-4 mb-4 bg-gray-50\">\r\n              <h4 className=\"font-medium text-lg mb-3 flex items-center gap-2\">\r\n                <span className=\"w-3 h-3 bg-indigo-500 rounded-full\"></span>\r\n                {getLanguageName(selectedLanguage)} Content\r\n              </h4>\r\n              \r\n              {/* Question Content */}\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Question Text</label>\r\n                <textarea\r\n                  rows={3}\r\n                  className=\"form-input\"\r\n                  placeholder={`Enter question in ${getLanguageName(selectedLanguage)}`}\r\n                  value={questionContent[selectedLanguage]?.question_text || ''}\r\n                  onChange={(e) => updateQuestionContent('question_text', e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              {watchedQuestionType === 'media' && (\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Question Media</label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input\r\n                      type=\"url\"\r\n                      className=\"form-input flex-1\"\r\n                      placeholder=\"Enter image or video URL\"\r\n                      value={questionContent[selectedLanguage]?.media_url || ''}\r\n                      onChange={(e) => updateQuestionContent('media_url', e.target.value)}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleImageUpload('question')}\r\n                      className=\"btn btn-outline\"\r\n                    >\r\n                      <Image className=\"w-4 h-4\" />\r\n                      Upload Image\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Explanation (Optional)</label>\r\n                <textarea\r\n                  rows={2}\r\n                  className=\"form-input\"\r\n                  placeholder={`Enter explanation in ${getLanguageName(selectedLanguage)}`}\r\n                  value={questionContent[selectedLanguage]?.explanation || ''}\r\n                  onChange={(e) => updateQuestionContent('explanation', e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              {/* Options */}\r\n              <div className=\"mt-4\">\r\n                <h5 className=\"font-medium mb-3\">Options</h5>\r\n                {[0, 1, 2, 3].map((optionIndex) => (\r\n                  <div key={optionIndex} className=\"border rounded-lg p-3 mb-3 bg-white\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"correct_option\"\r\n                        className=\"form-radio\"\r\n                        checked={optionsContent[optionIndex]?.is_correct || false}\r\n                        onChange={() => {\r\n                          // Uncheck all other options\r\n                          setOptionsContent(prev => prev.map((opt, idx) => ({\r\n                            ...opt,\r\n                            is_correct: idx === optionIndex\r\n                          })));\r\n                        }}\r\n                      />\r\n                      <span className=\"font-medium\">Option {optionIndex + 1}</span>\r\n                      {optionsContent[optionIndex]?.is_correct && (\r\n                        <span className=\"text-green-600 text-sm font-medium\">(Correct Answer)</span>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                      <label className=\"form-label\">Option Text</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-input\"\r\n                        placeholder={`Option ${optionIndex + 1} in ${getLanguageName(selectedLanguage)}`}\r\n                        value={optionsContent[optionIndex]?.content[selectedLanguage]?.option_text || ''}\r\n                        onChange={(e) => updateOptionContent(optionIndex, 'option_text', e.target.value)}\r\n                      />\r\n                    </div>\r\n\r\n                    {watchedQuestionType === 'media' && (\r\n                      <div className=\"form-group\">\r\n                        <label className=\"form-label\">Option Media</label>\r\n                        <div className=\"flex gap-2\">\r\n                          <input\r\n                            type=\"url\"\r\n                            className=\"form-input flex-1\"\r\n                            placeholder=\"Enter image URL\"\r\n                            value={optionsContent[optionIndex]?.content[selectedLanguage]?.media_url || ''}\r\n                            onChange={(e) => updateOptionContent(optionIndex, 'media_url', e.target.value)}\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => handleImageUpload('option', optionIndex)}\r\n                            className=\"btn btn-outline\"\r\n                          >\r\n                            <Image className=\"w-4 h-4\" />\r\n                            Upload\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Language Progress */}\r\n            <div className=\"mb-4\">\r\n              <h5 className=\"font-medium mb-2\">Content Progress</h5>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\r\n                {languages.map((language) => {\r\n                  const hasContent = questionContent[language.code]?.question_text;\r\n                  const hasOptions = optionsContent.some(opt => opt.content[language.code]?.option_text);\r\n                  return (\r\n                    <div key={language.code} className={`p-2 rounded text-sm ${hasContent && hasOptions ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'}`}>\r\n                      {language.native_name}\r\n                      {hasContent && hasOptions && <span className=\"ml-1\">✓</span>}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-2 mt-6\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                <Save className=\"w-4 h-4\" />\r\n                {editingId ? 'Update Question' : 'Create Question'}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleCancel}\r\n                className=\"btn btn-outline\"\r\n              >\r\n                <X className=\"w-4 h-4\" />\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Questions List */}\r\n      {selectedQuiz && (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">\r\n              Questions ({questions.length})\r\n            </h3>\r\n          </div>\r\n          <div className=\"space-y-4 p-4\">\r\n            {questions.map((question, index) => (\r\n              <div key={question.id} className=\"border rounded-lg p-4\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"bg-indigo-100 text-indigo-800 px-2 py-1 rounded text-sm font-medium\">\r\n                      Q{index + 1}\r\n                    </span>\r\n                    <span className={`badge ${question.question_type === 'text' ? 'user' : 'admin'}`}>\r\n                      {question.question_type === 'text' ? (\r\n                        <>\r\n                          <Type className=\"w-3 h-3 mr-1\" />\r\n                          Text\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Image className=\"w-3 h-3 mr-1\" />\r\n                          Media\r\n                        </>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex gap-2\">\r\n                    <button\r\n                      onClick={() => handleEdit(question)}\r\n                      className=\"btn btn-outline btn-sm\"\r\n                      title=\"Edit question\"\r\n                    >\r\n                      <Edit className=\"w-4 h-4\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(question.id)}\r\n                      disabled={deletingId === question.id}\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      title=\"Delete question\"\r\n                    >\r\n                      {deletingId === question.id ? (\r\n                        <div className=\"spinner\"></div>\r\n                      ) : (\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Question Content Preview */}\r\n                <div className=\"space-y-2\">\r\n                  {Object.entries(question.content).map(([langCode, content]) => (\r\n                    <div key={langCode} className=\"text-sm\">\r\n                      <span className=\"font-medium text-gray-600\">\r\n                        {getLanguageName(langCode)}:\r\n                      </span>\r\n                      <span className=\"ml-2\">{content.question_text}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Options Preview */}\r\n                <div className=\"mt-3\">\r\n                  <div className=\"text-sm font-medium text-gray-600 mb-2\">Options:</div>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                    {question.options.map((option, optIndex) => (\r\n                      <div key={option.id} className={`p-2 rounded text-sm ${option.is_correct ? 'bg-green-50 border border-green-200' : 'bg-gray-50'}`}>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className={`w-2 h-2 rounded-full ${option.is_correct ? 'bg-green-500' : 'bg-gray-300'}`}></span>\r\n                          <span className=\"font-medium\">Option {optIndex + 1}</span>\r\n                          {option.is_correct && <span className=\"text-green-600 text-xs\">(Correct)</span>}\r\n                        </div>\r\n                        {Object.entries(option.content).map(([langCode, optContent]) => (\r\n                          <div key={langCode} className=\"text-xs text-gray-600 ml-4\">\r\n                            {getLanguageName(langCode)}: {optContent.option_text}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {questions.length === 0 && (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <HelpCircle className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n                <p>No questions found. Add your first question to get started.</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}